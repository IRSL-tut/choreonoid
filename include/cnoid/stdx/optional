#ifndef CNOID_STDX_OPTIONAL_HEADER
#define CNOID_STDX_OPTIONAL_HEADER

#include <optional>
namespace cnoid::stdx {
using std::optional;
using std::nullopt;

template<class T, class... Args>
T& emplace(optional<T>& opt, Args&&... args){
    return opt.emplace(args...);
}
template<class T>
T& emplace(optional<T>& opt){
    return opt.emplace();
}

}

#endif
